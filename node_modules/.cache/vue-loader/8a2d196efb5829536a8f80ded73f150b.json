{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/hivqavue/src/components/login.vue?vue&type=style&index=0&id=10d9df09&scoped=true&lang=css&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/src/components/login.vue","mtime":1567595636739},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/css-loader/index.js","mtime":1567594825351},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":1567594828202},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/postcss-loader/src/index.js","mtime":1567594826796},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vuetify-loader/lib/loader.js","mtime":1567594828274},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/cache-loader/dist/cjs.js","mtime":1567594824838},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/index.js","mtime":1567594828201}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.split-bg {\n  height: 50%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  content: \"\";\n  z-index: 0;\n}\n\n  main{\n    padding-top:0px !important;\n  }\n  #login-card{\n    position: absolute;\n    top:20vh;\n    right:30vw;\n    min-width: 400px;\n    width:40vw;\n    max-width: 800px;\n  }\n\n",{"version":3,"sources":["login.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"login.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <v-app class=\"split-bg\">\n   <Loading v-if='authLoading'/>\n    <v-content>\n      <v-container fluid fill-height>\n        <v-layout align-center justify-center>\n          <v-flex xs12 sm8 md4 lg4>\n            <v-snackbar v-model=\"errorsnackbar\" :timeout=\"4000\" top color=\"error\">\n            <span>Email/Password wrong or Account is not activated</span>\n            <v-btn flat color=\"white\" @click=\"errorsnackbar = false\">Close</v-btn>\n             </v-snackbar>\n            <v-card class=\"elevation-3 pa-3\" id=\"login-card\">\n              <v-card-text>\n                <div class=\"layout column align-center\">\n                  <img src=\"/img/kenya.png\" alt=\"Vue Material Admin\" width=\"120\" height=\"120\" />\n                  <h1 class=\"flex my-4 primary--text\">\n                  HIVQA\n                  </h1>\n                </div>\n                <v-form ref=\"form\"\n                   v-model=\"valid\"\n                   lazy-validation>\n                <v-card-text>\n                <v-text-field\n                  v-model=\"username\"\n                  :rules=\"emailRules\"\n                  prepend-icon=\"person\"\n                  name=\"username\"\n                  label=\"E-mail\"\n                  required\n                ></v-text-field>\n                <v-text-field\n                    v-model=\"password\"\n                    prepend-icon=\"lock\"\n                    :rules=\"passwordRules\"\n                    name=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                  ></v-text-field>\n                </v-card-text>\n                </v-form>\n              </v-card-text>\n              <div class=\"login-btn\">\n                <v-spacer></v-spacer>\n                <v-btn block color=\"primary\" @click=\"login\" :loading=\"loading\">Login</v-btn>\n              </div>\n            </v-card>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-content>\n  </v-app>\n</template>\n\n<script>\n  import {AUTH_REQUEST} from '../store/actions/auth'\n  import Loading from './loading'\n  import { mapState } from 'vuex'\n export default {\n    name: 'Login',\n    components: {\n      Loading\n    },\n   data: () => {\n        return {\n          errorsnackbar: false,\n          loading: false,\n          valid: true,\n          password: '',\n          passwordRules: [\n            v => !!v || 'Password is required'\n          ],\n          username: '',\n          emailRules: [\n            v => !!v || 'E-mail is required',\n            v => /.+@.+/.test(v) || 'E-mail must be valid'\n          ],\n      };\n    },\n\n    methods: {\n        login: function () {\n        \n        if (this.$refs.form.validate()) {\n            this.loading = true\n           const { username, password } = this\n           this.$store.dispatch(AUTH_REQUEST, { username, password })\n           .then((response) => {\n            console.log(response)\n             setTimeout(() => {\n              this.$router.push(\"/dashboard\")\n              }, 1000)\n           }).catch((response) => {\n            console.log(response)\n                this.errorsnackbar = true\n                this.loading = false\n           });\n        }\n     },\n      reset () {\n        this.$refs.form.reset()\n      },\n\n  },\n   computed: {\n        ...mapState({\n          authLoading: state => state.auth.status === 'loading',\n        })\n      },\n}\n</script>\n\n<style scoped lang=\"css\">\n.split-bg {\n  height: 50%;\n  width: 100%;\n  position: absolute;\n  top: 0;\n  left: 0;\n  content: \"\";\n  z-index: 0;\n}\n\n  main{\n    padding-top:0px !important;\n  }\n  #login-card{\n    position: absolute;\n    top:20vh;\n    right:30vw;\n    min-width: 400px;\n    width:40vw;\n    max-width: 800px;\n  }\n\n</style>\n\n"]}]}