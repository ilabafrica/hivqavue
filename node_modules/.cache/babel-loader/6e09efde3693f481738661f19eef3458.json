{"remainingRequest":"/var/www/html/cli_frontend/node_modules/babel-loader/lib/index.js!/var/www/html/cli_frontend/node_modules/eslint-loader/index.js??ref--13-0!/var/www/html/cli_frontend/src/store/modules/auth.js","dependencies":[{"path":"/var/www/html/cli_frontend/src/store/modules/auth.js","mtime":1565188931877},{"path":"/var/www/html/cli_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/cli_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/cli_frontend/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _defineProperty from \"/var/www/html/cli_frontend/node_modules/@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"/var/www/html/cli_frontend/node_modules/@babel/runtime-corejs2/core-js/promise\";\n\nvar _actions, _mutations;\n\n/* eslint-disable promise/param-names */\nimport { AUTH_REQUEST, AUTH_ERROR, AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/auth';\nimport { USER_REQUEST } from '../actions/user';\nimport apiCall from '../../utils/api';\nvar state = {\n  token: localStorage.getItem('user-token') || '',\n  status: '',\n  hasLoadedOnce: false\n};\nvar getters = {\n  isAuthenticated: function isAuthenticated(state) {\n    return !!state.token;\n  },\n  authStatus: function authStatus(state) {\n    return state.status;\n  }\n};\nvar actions = (_actions = {}, _defineProperty(_actions, AUTH_REQUEST, function (_ref, user) {\n  var commit = _ref.commit,\n      dispatch = _ref.dispatch;\n  return new _Promise(function (resolve, reject) {\n    commit(AUTH_REQUEST);\n    apiCall({\n      url: '/api/login',\n      data: user,\n      method: 'POST'\n    }).then(function (resp) {\n      commit(AUTH_SUCCESS, resp);\n      localStorage.setItem('user-token', 'Bearer ' + resp.token);\n      dispatch(USER_REQUEST);\n      consol.log(resp);\n      resolve(resp);\n    }).catch(function (err) {\n      commit(AUTH_ERROR, err);\n      localStorage.removeItem('user-token');\n      reject(err);\n    });\n  });\n}), _defineProperty(_actions, AUTH_LOGOUT, function (_ref2) {\n  var commit = _ref2.commit,\n      dispatch = _ref2.dispatch;\n  return new _Promise(function (resolve, reject) {\n    commit(AUTH_LOGOUT);\n    localStorage.removeItem('user-token');\n    resolve();\n  });\n}), _actions);\nvar mutations = (_mutations = {}, _defineProperty(_mutations, AUTH_REQUEST, function (state) {\n  state.status = 'loading';\n}), _defineProperty(_mutations, AUTH_SUCCESS, function (state, resp) {\n  state.status = 'success';\n  state.token = resp.token;\n  state.hasLoadedOnce = true;\n}), _defineProperty(_mutations, AUTH_ERROR, function (state) {\n  state.status = 'error';\n  state.hasLoadedOnce = true;\n}), _defineProperty(_mutations, AUTH_LOGOUT, function (state) {\n  state.token = '';\n}), _mutations);\nexport default {\n  state: state,\n  getters: getters,\n  actions: actions,\n  mutations: mutations\n};",{"version":3,"sources":["/var/www/html/cli_frontend/src/store/modules/auth.js"],"names":["AUTH_REQUEST","AUTH_ERROR","AUTH_SUCCESS","AUTH_LOGOUT","USER_REQUEST","apiCall","state","token","localStorage","getItem","status","hasLoadedOnce","getters","isAuthenticated","authStatus","actions","user","commit","dispatch","resolve","reject","url","data","method","then","resp","setItem","consol","log","catch","err","removeItem","mutations"],"mappings":"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","sourcesContent":["/* eslint-disable promise/param-names */\nimport { AUTH_REQUEST, AUTH_ERROR, AUTH_SUCCESS, AUTH_LOGOUT } from '../actions/auth'\nimport { USER_REQUEST } from '../actions/user'\nimport apiCall from '../../utils/api'\n\nconst state = {\n  token: localStorage.getItem('user-token') || '', status: '', hasLoadedOnce: false\n   }\n\nconst getters = {\n  isAuthenticated: state => !!state.token,\n  authStatus: state => state.status,\n}\n\nconst actions = {\n  [AUTH_REQUEST]: ({commit, dispatch}, user) => {\n    return new Promise((resolve, reject) => {\n      commit(AUTH_REQUEST)\n\n      apiCall({url: '/api/login', data: user, method: 'POST'})\n      .then(resp => {\n        commit(AUTH_SUCCESS, resp)\n        localStorage.setItem('user-token', 'Bearer ' + resp.token)\n        dispatch(USER_REQUEST)\n        consol.log(resp);\n        resolve(resp)\n      }).catch(err => {\n        commit(AUTH_ERROR, err)\n        localStorage.removeItem('user-token')\n        reject(err)\n      })\n    })\n  },\n  [AUTH_LOGOUT]: ({commit, dispatch}) => {\n    return new Promise((resolve, reject) => {\n      commit(AUTH_LOGOUT)\n      localStorage.removeItem('user-token')\n      resolve()\n    })\n  }\n}\n\nconst mutations = {\n  [AUTH_REQUEST]: (state) => {\n    state.status = 'loading'\n  },\n  [AUTH_SUCCESS]: (state, resp) => {\n    state.status = 'success'\n    state.token = resp.token\n    state.hasLoadedOnce = true\n  },\n  [AUTH_ERROR]: (state) => {\n    state.status = 'error'\n    state.hasLoadedOnce = true\n  },\n  [AUTH_LOGOUT]: (state) => {\n    state.token = ''\n  }\n}\n\nexport default {\n  state,\n  getters,\n  actions,\n  mutations,\n}\n"]}]}