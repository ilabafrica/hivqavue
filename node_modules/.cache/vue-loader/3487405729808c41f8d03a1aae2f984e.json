{"remainingRequest":"/var/www/html/cli_frontend/node_modules/vue-loader/lib/index.js??vue-loader-options!/var/www/html/cli_frontend/src/components/navsettings/AppDrawer.vue?vue&type=script&lang=js&","dependencies":[{"path":"/var/www/html/cli_frontend/src/components/navsettings/AppDrawer.vue","mtime":1565002605180},{"path":"/var/www/html/cli_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/cli_frontend/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/var/www/html/cli_frontend/node_modules/vuetify-loader/lib/loader.js","mtime":1548745995000},{"path":"/var/www/html/cli_frontend/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/var/www/html/cli_frontend/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\"\r\nexport default {\r\n  name: \"AppDrawer\",\r\n  components: {\r\n    VuePerfectScrollbar\r\n  },\r\n  props: {\r\n    expanded: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    drawWidth: {\r\n      type: [Number, String],\r\n      default: \"260\"\r\n    },\r\n    showDrawer: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      mini: false,\r\n      menus: Menu,\r\n      scrollSettings: {\r\n        maxScrollbarLength: 160\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    computeGroupActive() {\r\n      return true\r\n    },\r\n    KenyaLogo() {\r\n      return \"/img/kenya.png\"\r\n    },\r\n\r\n    sideToolbarColor() {\r\n      return this.$vuetify.options.extra.sideNav\r\n    }\r\n  },\r\n  created() {},\r\n\r\n  methods: {\r\n    genChildTarget(item, subItem) {\r\n      if (subItem.href) return\r\n      if (subItem.component) {\r\n        return {\r\n          name: subItem.component\r\n        }\r\n      }\r\n      return { name: `${item.group}/${subItem.name}` }\r\n    }\r\n  }\r\n}\r\n\r\nconst Menu = [\r\n  { header: \"Apps\" },\r\n  {\r\n    title: \"Dashboard\",\r\n    group: \"apps\",\r\n    icon: \"dashboard\",\r\n    name: \"Dashboard\"\r\n  },\r\n  {\r\n    title: \"Chat\",\r\n    group: \"apps\",\r\n    icon: \"chat_bubble\",\r\n    target: \"_blank\",\r\n    name: \"Chat\"\r\n  },\r\n  {\r\n    title: \"Inbox\",\r\n    group: \"apps\",\r\n    name: \"Mail\",\r\n    target: \"_blank\",\r\n    icon: \"email\"\r\n  },\r\n  { header: \"CMS\" },\r\n  {\r\n    title: \"List & Query\",\r\n    group: \"layout\",\r\n    icon: \"view_compact\",\r\n    items: [{ name: \"\", title: \"Basic Table\", component: \"\" }]\r\n  }\r\n\r\n]\r\n// reorder menu\r\nMenu.forEach(item => {\r\n  if (item.items) {\r\n    item.items.sort((x, y) => {\r\n      let textA = x.title.toUpperCase()\r\n      let textB = y.title.toUpperCase()\r\n      return textA < textB ? -1 : textA > textB ? 1 : 0\r\n    })\r\n  }\r\n})\r\n\r\n\r\n\r\n",{"version":3,"sources":["AppDrawer.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"AppDrawer.vue","sourceRoot":"src/components/navsettings","sourcesContent":["<template>\r\n  <v-navigation-drawer class=\"app--drawer\" :mini-variant.sync=\"mini\" app v-model=\"showDrawer\" :width=\"drawWidth\">\r\n    <v-toolbar color=\"primary darken-1\" dark>\r\n      <img :src=\"KenyaLogo\" height=\"36\" alt=\"HIVQA\" />\r\n      <v-toolbar-title class=\"ml-0 pl-3\">\r\n        <span class=\"hidden-sm-and-down\">HIVQA</span>\r\n      </v-toolbar-title>\r\n    </v-toolbar>\r\n    <vue-perfect-scrollbar class=\"drawer-menu--scroll\" :settings=\"scrollSettings\">\r\n      <v-list dense expand>\r\n        <template v-for=\"item in menus\">\r\n          <!--group with subitems-->\r\n          <v-list-group\r\n            v-if=\"item.items\"\r\n            :key=\"item.title\"\r\n            :group=\"item.group\"\r\n            :prepend-icon=\"item.icon\"\r\n            no-action=\"no-action\"\r\n          >\r\n            <v-list-tile slot=\"activator\" ripple=\"ripple\">\r\n              <v-list-tile-content>\r\n                <v-list-tile-title>{{ item.title }}</v-list-tile-title>\r\n              </v-list-tile-content>\r\n            </v-list-tile>\r\n            <template v-for=\"subItem in item.items\">\r\n              <!--sub group-->\r\n              <v-list-group v-if=\"subItem.items\" :key=\"subItem.name\" :group=\"subItem.group\" sub-group=\"sub-group\">\r\n                <v-list-tile slot=\"activator\" ripple=\"ripple\">\r\n                  <v-list-tile-content>\r\n                    <v-list-tile-title>{{ subItem.title }}</v-list-tile-title>\r\n                  </v-list-tile-content>\r\n                </v-list-tile>\r\n                <v-list-tile\r\n                  v-for=\"grand in subItem.children\"\r\n                  :key=\"grand.name\"\r\n                  :to=\"genChildTarget(item, grand)\"\r\n                  :href=\"grand.href\"\r\n                  ripple=\"ripple\"\r\n                >\r\n                  <v-list-tile-content>\r\n                    <v-list-tile-title>{{ grand.title }}</v-list-tile-title>\r\n                  </v-list-tile-content>\r\n                </v-list-tile>\r\n              </v-list-group>\r\n              <!--child item-->\r\n              <v-list-tile\r\n                v-else\r\n                :key=\"subItem.name\"\r\n                :to=\"genChildTarget(item, subItem)\"\r\n                :href=\"subItem.href\"\r\n                :disabled=\"subItem.disabled\"\r\n                :target=\"subItem.target\"\r\n                ripple=\"ripple\"\r\n              >\r\n                <v-list-tile-content>\r\n                  <v-list-tile-title>\r\n                    <span>{{ subItem.title }}</span>\r\n                  </v-list-tile-title>\r\n                </v-list-tile-content>\r\n                <v-list-tile-action v-if=\"subItem.action\">\r\n                  <v-icon :class=\"[subItem.actionClass || 'success--text']\">{{ subItem.action }}</v-icon>\r\n                </v-list-tile-action>\r\n              </v-list-tile>\r\n            </template>\r\n          </v-list-group>\r\n          <v-subheader v-else-if=\"item.header\" :key=\"item.name\">{{ item.header }}</v-subheader>\r\n          <v-divider v-else-if=\"item.divider\" :key=\"item.name\"></v-divider>\r\n          <!--top-level link-->\r\n          <v-list-tile\r\n            v-else\r\n            :to=\"!item.href ? { name: item.name } : null\"\r\n            :href=\"item.href\"\r\n            ripple=\"ripple\"\r\n            :disabled=\"item.disabled\"\r\n            :target=\"item.target\"\r\n            rel=\"noopener\"\r\n            :key=\"item.name\"\r\n          >\r\n            <v-list-tile-action v-if=\"item.icon\">\r\n              <v-icon>{{ item.icon }}</v-icon>\r\n            </v-list-tile-action>\r\n            <v-list-tile-content>\r\n              <v-list-tile-title>{{ item.title }}</v-list-tile-title>\r\n            </v-list-tile-content>\r\n            <v-list-tile-action v-if=\"item.subAction\">\r\n              <v-icon class=\"success--text\">{{ item.subAction }}</v-icon>\r\n            </v-list-tile-action>\r\n          </v-list-tile>\r\n        </template>\r\n      </v-list>\r\n    </vue-perfect-scrollbar>\r\n  </v-navigation-drawer>\r\n</template>\r\n<script>\r\n\r\nimport VuePerfectScrollbar from \"vue-perfect-scrollbar\"\r\nexport default {\r\n  name: \"AppDrawer\",\r\n  components: {\r\n    VuePerfectScrollbar\r\n  },\r\n  props: {\r\n    expanded: {\r\n      type: Boolean,\r\n      default: true\r\n    },\r\n    drawWidth: {\r\n      type: [Number, String],\r\n      default: \"260\"\r\n    },\r\n    showDrawer: Boolean\r\n  },\r\n  data() {\r\n    return {\r\n      mini: false,\r\n      menus: Menu,\r\n      scrollSettings: {\r\n        maxScrollbarLength: 160\r\n      }\r\n    }\r\n  },\r\n  computed: {\r\n    computeGroupActive() {\r\n      return true\r\n    },\r\n    KenyaLogo() {\r\n      return \"/img/kenya.png\"\r\n    },\r\n\r\n    sideToolbarColor() {\r\n      return this.$vuetify.options.extra.sideNav\r\n    }\r\n  },\r\n  created() {},\r\n\r\n  methods: {\r\n    genChildTarget(item, subItem) {\r\n      if (subItem.href) return\r\n      if (subItem.component) {\r\n        return {\r\n          name: subItem.component\r\n        }\r\n      }\r\n      return { name: `${item.group}/${subItem.name}` }\r\n    }\r\n  }\r\n}\r\n\r\nconst Menu = [\r\n  { header: \"Apps\" },\r\n  {\r\n    title: \"Dashboard\",\r\n    group: \"apps\",\r\n    icon: \"dashboard\",\r\n    name: \"Dashboard\"\r\n  },\r\n  {\r\n    title: \"Chat\",\r\n    group: \"apps\",\r\n    icon: \"chat_bubble\",\r\n    target: \"_blank\",\r\n    name: \"Chat\"\r\n  },\r\n  {\r\n    title: \"Inbox\",\r\n    group: \"apps\",\r\n    name: \"Mail\",\r\n    target: \"_blank\",\r\n    icon: \"email\"\r\n  },\r\n  { header: \"CMS\" },\r\n  {\r\n    title: \"List & Query\",\r\n    group: \"layout\",\r\n    icon: \"view_compact\",\r\n    items: [{ name: \"\", title: \"Basic Table\", component: \"\" }]\r\n  }\r\n\r\n]\r\n// reorder menu\r\nMenu.forEach(item => {\r\n  if (item.items) {\r\n    item.items.sort((x, y) => {\r\n      let textA = x.title.toUpperCase()\r\n      let textB = y.title.toUpperCase()\r\n      return textA < textB ? -1 : textA > textB ? 1 : 0\r\n    })\r\n  }\r\n})\r\n\r\n\r\n\r\n</script>\r\n\r\n<style lang=\"stylus\" scoped>\r\n.app--drawer\r\n  overflow: hidden\r\n  .drawer-menu--scroll\r\n    height: calc(100vh - 48px)\r\n    overflow: auto\r\n</style>\r\n"]}]}