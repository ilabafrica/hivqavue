{"remainingRequest":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vuetify-loader/lib/loader.js!/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Applications/XAMPP/xamppfiles/htdocs/hivqavue/src/components/register.vue?vue&type=template&id=8f8a1d9a&","dependencies":[{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/src/components/register.vue","mtime":1567595793770},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/cache-loader/dist/cjs.js","mtime":1567594824838},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1567594828202},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vuetify-loader/lib/loader.js","mtime":1567594828274},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/cache-loader/dist/cjs.js","mtime":1567594824838},{"path":"/Applications/XAMPP/xamppfiles/htdocs/hivqavue/node_modules/vue-loader/lib/index.js","mtime":1567594828201}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { attrs: { id: \"inspire\" } },\n    [\n      _c(\n        \"v-card\",\n        { staticClass: \"elevation-3\", attrs: { id: \"login-card\" } },\n        [\n          _c(\n            \"v-snackbar\",\n            {\n              attrs: { timeout: 4000, top: \"\", color: \"success\" },\n              model: {\n                value: _vm.snackbar,\n                callback: function($$v) {\n                  _vm.snackbar = $$v\n                },\n                expression: \"snackbar\"\n              }\n            },\n            [\n              _c(\"span\", [\n                _vm._v(\n                  \"Account Created. We've sent you an activation link via email.\"\n                )\n              ]),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { flat: \"\", color: \"white\" },\n                  on: {\n                    click: function($event) {\n                      _vm.errorsnackbar = false\n                    }\n                  }\n                },\n                [_vm._v(\"Close\")]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"v-snackbar\",\n            {\n              attrs: { timeout: 4000, top: \"\", color: \"error\" },\n              model: {\n                value: _vm.errorsnackbar,\n                callback: function($$v) {\n                  _vm.errorsnackbar = $$v\n                },\n                expression: \"errorsnackbar\"\n              }\n            },\n            [\n              _c(\"span\", [_vm._v(\"Something went wrong. Kindly try again\")]),\n              _c(\n                \"v-btn\",\n                {\n                  attrs: { flat: \"\", color: \"white\" },\n                  on: {\n                    click: function($event) {\n                      _vm.errorsnackbar = false\n                    }\n                  }\n                },\n                [_vm._v(\"Close\")]\n              )\n            ],\n            1\n          ),\n          _vm.authLoading ? _c(\"Loading\") : _vm._e(),\n          _c(\n            \"v-toolbar\",\n            { staticClass: \"elevation-0\" },\n            [_c(\"v-toolbar-title\", [_vm._v(\"R-Placement\")]), _c(\"v-spacer\")],\n            1\n          ),\n          _c(\n            \"v-form\",\n            {\n              ref: \"form\",\n              staticClass: \"px-3\",\n              attrs: { \"lazy-validation\": \"\" },\n              model: {\n                value: _vm.valid,\n                callback: function($$v) {\n                  _vm.valid = $$v\n                },\n                expression: \"valid\"\n              }\n            },\n            [\n              _c(\n                \"v-card-text\",\n                [\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      rules: _vm.nameRules,\n                      \"prepend-icon\": \"person\",\n                      name: \"name\",\n                      label: \"Username\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.userData.name,\n                      callback: function($$v) {\n                        _vm.$set(_vm.userData, \"name\", $$v)\n                      },\n                      expression: \"userData.name\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      rules: _vm.emailRules,\n                      \"prepend-icon\": \"mail\",\n                      name: \"email\",\n                      label: \"E-mail\",\n                      required: \"\"\n                    },\n                    model: {\n                      value: _vm.userData.email,\n                      callback: function($$v) {\n                        _vm.$set(_vm.userData, \"email\", $$v)\n                      },\n                      expression: \"userData.email\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      \"prepend-icon\": \"lock\",\n                      rules: _vm.passwordRules,\n                      name: \"password\",\n                      abel: \"Password\",\n                      type: \"password\"\n                    },\n                    model: {\n                      value: _vm.userData.password,\n                      callback: function($$v) {\n                        _vm.$set(_vm.userData, \"password\", $$v)\n                      },\n                      expression: \"userData.password\"\n                    }\n                  }),\n                  _c(\"v-text-field\", {\n                    attrs: {\n                      \"prepend-icon\": \"lock\",\n                      rules: _vm.passwordConfirmRules,\n                      name: \"password\",\n                      label: \"Confirm Password\",\n                      type: \"password\"\n                    },\n                    model: {\n                      value: _vm.confirmpassword,\n                      callback: function($$v) {\n                        _vm.confirmpassword = $$v\n                      },\n                      expression: \"confirmpassword\"\n                    }\n                  })\n                ],\n                1\n              ),\n              _c(\n                \"v-card-actions\",\n                [\n                  _c(\n                    \"div\",\n                    [\n                      _c(\n                        \"v-btn\",\n                        { attrs: { flat: \"\", small: \"\", to: \"login\" } },\n                        [_vm._v(\"Login\")]\n                      )\n                    ],\n                    1\n                  ),\n                  _c(\"v-spacer\"),\n                  _c(\n                    \"v-btn\",\n                    {\n                      attrs: {\n                        color: \"primary\",\n                        round: \"\",\n                        disabled: !_vm.valid,\n                        loading: _vm.loading\n                      },\n                      on: { click: _vm.create }\n                    },\n                    [_vm._v(\"\\n\\t\\t\\t\\t          Create account\\n\\t\\t\\t\\t    \")]\n                  )\n                ],\n                1\n              )\n            ],\n            1\n          )\n        ],\n        1\n      )\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}